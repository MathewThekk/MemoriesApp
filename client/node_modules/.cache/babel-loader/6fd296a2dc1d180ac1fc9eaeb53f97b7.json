{"ast":null,"code":"var _jsxFileName = \"/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/components/PostDetails/CommentSection.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { commentPost } from '../../actions/postsActions';\nimport useStyles from './postDetailsStyles';\nconst CommentSection = _ref => {\n  let {\n    post\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [updatedComments, setUpdatedComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const {\n    comments\n  } = useSelector(state => state.posts);\n  const classes = useStyles();\n  const commentsRef = useRef();\n  useEffect(() => {\n    let isMounted = true;\n    if (comments && isMounted) {\n      setUpdatedComments(comments);\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [comments]);\n  const handleComment = async () => {\n    var _user$result;\n    const newComment = `${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`;\n    const promise = dispatch(commentPost(newComment, post._id));\n    promise.then(() => {\n      setComment('');\n    });\n    return () => {\n      promise.cancel();\n    };\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Comments\"), updatedComments === null || updatedComments === void 0 ? void 0 : updatedComments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, c.split(': ')[0]), c.split(':')[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    minRows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Comment\"))));\n};\nexport default CommentSection;","map":{"version":3,"names":["React","useState","useRef","useEffect","Typography","TextField","Button","useDispatch","useSelector","commentPost","useStyles","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","updatedComments","setUpdatedComments","comments","state","posts","classes","commentsRef","isMounted","handleComment","newComment","result","name","promise","_id","then","cancel","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/components/PostDetails/CommentSection.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { commentPost } from '../../actions/postsActions';\nimport useStyles from './postDetailsStyles';\n\nconst CommentSection = ({ post }) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [updatedComments, setUpdatedComments] = useState(post?.comments);\n  const { comments } = useSelector((state) => state.posts);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (comments && isMounted) {\n      setUpdatedComments(comments);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [comments]);\n\n  const handleComment = async () => {\n    const newComment = `${user?.result?.name}: ${comment}`;\n\n    const promise = dispatch(commentPost(newComment, post._id));\n    promise.then(() => {\n      setComment('');\n    });\n\n    return () => {\n      promise.cancel();\n    };\n  };\n\n  return (\n    <div>\n      <div className={classes.commentsOuterContainer}>\n        <div className={classes.commentsInnerContainer}>\n          <Typography gutterBottom variant=\"h6\">Comments</Typography>\n          {updatedComments?.map((c, i) => (\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\n              <strong>{c.split(': ')[0]}</strong>\n              {c.split(':')[1]}\n            </Typography>\n          ))}\n          <div ref={commentsRef} />\n        </div>\n        <div style={{ width: '70%' }}>\n          <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\n          <TextField fullWidth minRows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n          <br />\n          <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n            Comment\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}