{"ast":null,"code":"import { CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST, FETCH_POSTS_BY_SEARCH, FETCH_POSTS_BY_PAGE, START_LOADING, FINISHED_LOADING, FETCH_POST, COMMENT } from \"../constants/actionTypeConstants\";\nexport const postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case FINISHED_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_POSTS_BY_PAGE:\n      return {\n        ...state,\n        posts: action.payload.data,\n        numberOfPages: action.payload.numberOfPages,\n        page: action.payload.page\n      };\n    case FETCH_POSTS_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload.post\n      };\n    case CREATE_POST:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload]\n      };\n    case UPDATE_POST:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post.id !== action.payload.id)\n      };\n    case LIKE_POST:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id == +action.payload._id ? action.payload : post)\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CREATE_POST","UPDATE_POST","DELETE_POST","LIKE_POST","FETCH_POSTS_BY_SEARCH","FETCH_POSTS_BY_PAGE","START_LOADING","FINISHED_LOADING","FETCH_POST","COMMENT","postReducer","state","isLoading","posts","action","type","payload","data","numberOfPages","page","post","map","_id","filter","id"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/reducers/postReducer.js"],"sourcesContent":["import { CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST, FETCH_POSTS_BY_SEARCH, FETCH_POSTS_BY_PAGE, START_LOADING, FINISHED_LOADING, FETCH_POST, COMMENT } from \"../constants/actionTypeConstants\";\n\nexport const postReducer = (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case FINISHED_LOADING:\n      return { ...state, isLoading: false };\n    case FETCH_POSTS_BY_PAGE:\n      return { ...state, posts: action.payload.data, numberOfPages: action.payload.numberOfPages, page: action.payload.page };\n    case FETCH_POSTS_BY_SEARCH:\n      return { ...state, posts: action.payload };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case CREATE_POST:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE_POST:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE_POST:\n      return { ...state, posts: state.posts.filter((post) => post.id !== action.payload.id) };\n    case LIKE_POST:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case COMMENT:\n      return { ...state, posts: state.posts.map((post) => (post._id == +action.payload._id ? action.payload : post)) };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAEC,qBAAqB,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,OAAO,QAAQ,kCAAkC;AAErM,OAAO,MAAMC,WAAW,GAAG,YAAoD;EAAA,IAAnDC,KAAK,uEAAG;IAAEC,SAAS,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAM;EACxE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,aAAa;MAChB,OAAO;QAAE,GAAGK,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC;IACtC,KAAKL,gBAAgB;MACnB,OAAO;QAAE,GAAGI,KAAK;QAAEC,SAAS,EAAE;MAAM,CAAC;IACvC,KAAKP,mBAAmB;MACtB,OAAO;QAAE,GAAGM,KAAK;QAAEE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC,IAAI;QAAEC,aAAa,EAAEJ,MAAM,CAACE,OAAO,CAACE,aAAa;QAAEC,IAAI,EAAEL,MAAM,CAACE,OAAO,CAACG;MAAK,CAAC;IACzH,KAAKf,qBAAqB;MACxB,OAAO;QAAE,GAAGO,KAAK;QAAEE,KAAK,EAAEC,MAAM,CAACE;MAAQ,CAAC;IAC5C,KAAKR,UAAU;MACb,OAAO;QAAE,GAAGG,KAAK;QAAES,IAAI,EAAEN,MAAM,CAACE,OAAO,CAACI;MAAK,CAAC;IAChD,KAAKpB,WAAW;MACd,OAAO;QAAE,GAAGW,KAAK;QAAEE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAK,EAAEC,MAAM,CAACE,OAAO;MAAE,CAAC;IAC9D,KAAKf,WAAW;MACd,OAAO;QAAE,GAAGU,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAE,CAAC;IAClH,KAAKlB,WAAW;MACd,OAAO;QAAE,GAAGS,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACU,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKV,MAAM,CAACE,OAAO,CAACQ,EAAE;MAAE,CAAC;IACzF,KAAKrB,SAAS;MACZ,OAAO;QAAE,GAAGQ,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAE,CAAC;IAClH,KAAKX,OAAO;MACV,OAAO;QAAE,GAAGE,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,IAAI,CAACR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAE,CAAC;IAClH;MACE,OAAOT,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module"}