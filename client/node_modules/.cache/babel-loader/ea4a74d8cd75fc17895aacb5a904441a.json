{"ast":null,"code":"import * as api from '../api/postApi';\nimport { CREATE_POST, FETCH_ALL, UPDATE_POST, DELETE_POST, LIKE_POST } from \"../constants/actionTypeConstants\";\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost();\n    const action = {\n      type: FETCH_ALL,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = postData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(postData);\n    console.log(data);\n    const action = {\n      type: CREATE_POST,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = postData => async dispatch => {\n  try {\n    console.log('updating post');\n    const {\n      data\n    } = await api.updatePost(postData);\n    const action = {\n      type: UPDATE_POST,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    const action = {\n      type: DELETE_POST,\n      payload: id\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    const action = {\n      type: LIKE_POST,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","CREATE_POST","FETCH_ALL","UPDATE_POST","DELETE_POST","LIKE_POST","getPosts","dispatch","data","fetchPost","action","type","payload","error","console","log","createPost","postData","updatePost","deletePost","id","likePost"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/actions/postsActions.js"],"sourcesContent":["import * as api from '../api/postApi'\nimport { CREATE_POST, FETCH_ALL,UPDATE_POST,DELETE_POST, LIKE_POST  } from \"../constants/actionTypeConstants\";\n\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPost()\n        const action = { type: FETCH_ALL, payload: data }\n        dispatch(action)\n\n    } catch (error) {\n        console.log(error)\n\n\n    }\n}\nexport const createPost = (postData) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(postData)\n        console.log(data)\n\n\n        const action = { type: CREATE_POST, payload: data }\n        dispatch(action)\n\n    } catch (error) {\n        console.log(error)\n\n    }\n}\nexport const updatePost = (postData) => async (dispatch) => {\n    try {\n        console.log('updating post')\n        const { data } = await api.updatePost(postData)\n\n        const action = { type: UPDATE_POST, payload: data }\n        dispatch(action)\n\n    } catch (error) {\n        console.log(error)\n\n    }\n}\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        const action = { type: DELETE_POST, payload: id }\n        dispatch(action)\n    }\n    catch (error) {\n        console.log(error)\n    }\n}\nexport const likePost = (id) => async (dispatch) => {\n    try {\n       const {data} = await api.likePost(id)\n        const action = { type: LIKE_POST, payload: data }\n        dispatch(action)\n    }\n    catch (error) {\n        console.log(error)\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,gBAAgB;AACrC,SAASC,WAAW,EAAEC,SAAS,EAACC,WAAW,EAACC,WAAW,EAAEC,SAAS,QAAS,kCAAkC;AAG7G,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACS,SAAS,EAAE;IACtC,MAAMC,MAAM,GAAG;MAAEC,IAAI,EAAET,SAAS;MAAEU,OAAO,EAAEJ;IAAK,CAAC;IACjDD,QAAQ,CAACG,MAAM,CAAC;EAEpB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAGtB;AACJ,CAAC;AACD,OAAO,MAAMG,UAAU,GAAIC,QAAQ,IAAK,MAAOV,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACgB,UAAU,CAACC,QAAQ,CAAC;IAC/CH,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IAGjB,MAAME,MAAM,GAAG;MAAEC,IAAI,EAAEV,WAAW;MAAEW,OAAO,EAAEJ;IAAK,CAAC;IACnDD,QAAQ,CAACG,MAAM,CAAC;EAEpB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAEtB;AACJ,CAAC;AACD,OAAO,MAAMK,UAAU,GAAID,QAAQ,IAAK,MAAOV,QAAQ,IAAK;EACxD,IAAI;IACAO,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACkB,UAAU,CAACD,QAAQ,CAAC;IAE/C,MAAMP,MAAM,GAAG;MAAEC,IAAI,EAAER,WAAW;MAAES,OAAO,EAAEJ;IAAK,CAAC;IACnDD,QAAQ,CAACG,MAAM,CAAC;EAEpB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAEtB;AACJ,CAAC;AACD,OAAO,MAAMM,UAAU,GAAIC,EAAE,IAAK,MAAOb,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMP,GAAG,CAACmB,UAAU,CAACC,EAAE,CAAC;IACxB,MAAMV,MAAM,GAAG;MAAEC,IAAI,EAAEP,WAAW;MAAEQ,OAAO,EAAEQ;IAAG,CAAC;IACjDb,QAAQ,CAACG,MAAM,CAAC;EACpB,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMQ,QAAQ,GAAID,EAAE,IAAK,MAAOb,QAAQ,IAAK;EAChD,IAAI;IACD,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMR,GAAG,CAACqB,QAAQ,CAACD,EAAE,CAAC;IACpC,MAAMV,MAAM,GAAG;MAAEC,IAAI,EAAEN,SAAS;MAAEO,OAAO,EAAEJ;IAAK,CAAC;IACjDD,QAAQ,CAACG,MAAM,CAAC;EACpB,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}