{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:3000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n  return req;\n});\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPostsByPage = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchquery=${searchQuery.search || 'none'}&tags=${searchQuery.tags || 'none'}`);\nexport const createPost = postData => API.post('/posts', postData);\nexport const updatePost = postData => API.patch(`${'/posts'}/${postData._id}`, postData);\nexport const deletePost = id => API.delete(`${'/posts'}/${id}`);\nexport const likePost = id => API.patch(`${'/posts'}/${id}/likePost`);\nexport const signIn = formData => API.post('/user/signin', formData);\nexport const signUp = formData => API.post('/user/signup', formData);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPostsByPage","page","fetchPostsBySearch","searchQuery","search","tags","createPost","postData","post","updatePost","patch","_id","deletePost","delete","likePost","signIn","formData","signUp"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({ baseURL: 'http://localhost:3000' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id)=> API.get(`/posts/${id}`);\nexport const fetchPostsByPage = (page)=> API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery)=> API.get(`/posts/search?searchquery=${searchQuery.search || 'none'}&tags=${searchQuery.tags || 'none'}`)\nexport const createPost = (postData)=> API.post('/posts',postData)\nexport const updatePost = (postData)=> API.patch(`${'/posts'}/${postData._id}`,postData)\nexport const deletePost = (id)=> API.delete(`${'/posts'}/${id}`)\nexport const likePost = (id)=> API.patch(`${'/posts'}/${id}/likePost`)\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAwB,CAAC,CAAC;AAE9DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,IAAIC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAE;IACnCF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAM,EAAC;EAC3F;EAEA,OAAOP,GAAG;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMQ,SAAS,GAAIC,EAAE,IAAIf,GAAG,CAACgB,GAAG,CAAE,UAASD,EAAG,EAAC,CAAC;AACvD,OAAO,MAAME,gBAAgB,GAAIC,IAAI,IAAIlB,GAAG,CAACgB,GAAG,CAAE,eAAcE,IAAK,EAAC,CAAC;AACvE,OAAO,MAAMC,kBAAkB,GAAIC,WAAW,IAAIpB,GAAG,CAACgB,GAAG,CAAE,6BAA4BI,WAAW,CAACC,MAAM,IAAI,MAAO,SAAQD,WAAW,CAACE,IAAI,IAAI,MAAO,EAAC,CAAC;AACzJ,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAIxB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAACD,QAAQ,CAAC;AAClE,OAAO,MAAME,UAAU,GAAIF,QAAQ,IAAIxB,GAAG,CAAC2B,KAAK,CAAE,GAAE,QAAS,IAAGH,QAAQ,CAACI,GAAI,EAAC,EAACJ,QAAQ,CAAC;AACxF,OAAO,MAAMK,UAAU,GAAId,EAAE,IAAIf,GAAG,CAAC8B,MAAM,CAAE,GAAE,QAAS,IAAGf,EAAG,EAAC,CAAC;AAChE,OAAO,MAAMgB,QAAQ,GAAIhB,EAAE,IAAIf,GAAG,CAAC2B,KAAK,CAAE,GAAE,QAAS,IAAGZ,EAAG,WAAU,CAAC;AAEtE,OAAO,MAAMiB,MAAM,GAAIC,QAAQ,IAAKjC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEQ,QAAQ,CAAC;AACtE,OAAO,MAAMC,MAAM,GAAID,QAAQ,IAAKjC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEQ,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}