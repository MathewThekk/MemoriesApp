{"ast":null,"code":"var _jsxFileName = \"/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nconst Form = () => {\n  //   const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  //   const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  //   useEffect(() => {\n  //     if (post) setPostData(post);\n  //   }, [post]);\n\n  const clear = () => {\n    // setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  const handleSubmit = async e => {\n    // e.preventDefault();\n\n    // if (currentId === 0) {\n    //   dispatch(createPost(postData));\n    //   clear();\n    // } else {\n    //   dispatch(updatePost(currentId, postData));\n    //   clear();\n    // }\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({\n      ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref => {\n      let {\n        base64\n      } = _ref;\n      return setPostData({\n        ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","dispatch","classes","clear","setPostData","creator","title","message","tags","selectedFile","handleSubmit","e","paper","root","form","currentId","post","postData","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = () => {\n//   const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n//   const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n//   useEffect(() => {\n//     if (post) setPostData(post);\n//   }, [post]);\n\n  const clear = () => {\n    // setCurrentId(0);\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    // e.preventDefault();\n\n    // if (currentId === 0) {\n    //   dispatch(createPost(postData));\n    //   clear();\n    // } else {\n    //   dispatch(updatePost(currentId, postData));\n    //   clear();\n    // }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}