{"ast":null,"code":"import * as api from \"../api/api.js\";\nimport { CREATE_POST, FETCH_POSTS_BY_PAGE, FETCH_POSTS_BY_SEARCH, UPDATE_POST, DELETE_POST, LIKE_POST, START_LOADING, FINISHED_LOADING } from \"../constants/actionTypeConstants\";\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPost()\n//         const action = { type: FETCH_ALL, payload: data }\n//         dispatch(action)\n\n//     } catch (error) {\n//         console.log(error)\n\n//     }\n// }\nexport const getPostsByPage = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPostsByPage(page);\n    const action = {\n      type: FETCH_POSTS_BY_PAGE,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    const action = {\n      type: FETCH_POSTS_BY_SEARCH,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = postData => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(postData);\n    const action = {\n      type: CREATE_POST,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = postData => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.updatePost(postData);\n    const action = {\n      type: UPDATE_POST,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    await api.deletePost(id);\n    const action = {\n      type: DELETE_POST,\n      payload: id\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.likePost(id);\n    const action = {\n      type: LIKE_POST,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","CREATE_POST","FETCH_POSTS_BY_PAGE","FETCH_POSTS_BY_SEARCH","UPDATE_POST","DELETE_POST","LIKE_POST","START_LOADING","FINISHED_LOADING","getPostsByPage","page","dispatch","type","data","fetchPostsByPage","action","payload","error","console","log","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","postData","updatePost","deletePost","id","likePost"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/actions/postsActions.js"],"sourcesContent":["import * as api from \"../api/api.js\";\nimport { CREATE_POST, FETCH_POSTS_BY_PAGE, FETCH_POSTS_BY_SEARCH, UPDATE_POST, DELETE_POST, LIKE_POST, START_LOADING, FINISHED_LOADING } from \"../constants/actionTypeConstants\";\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPost()\n//         const action = { type: FETCH_ALL, payload: data }\n//         dispatch(action)\n\n//     } catch (error) {\n//         console.log(error)\n\n//     }\n// }\nexport const getPostsByPage = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPostsByPage(page);\n    const action = { type: FETCH_POSTS_BY_PAGE, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const {\n      data: { data },\n    } = await api.fetchPostsBySearch(searchQuery);\n\n    const action = { type: FETCH_POSTS_BY_SEARCH, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (postData) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(postData);\n\n    const action = { type: CREATE_POST, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (postData) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.updatePost(postData);\n\n    const action = { type: UPDATE_POST, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.deletePost(id);\n    const action = { type: DELETE_POST, payload: id };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.likePost(id);\n\n    const action = { type: LIKE_POST, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}