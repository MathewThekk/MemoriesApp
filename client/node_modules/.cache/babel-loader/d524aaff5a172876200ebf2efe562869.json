{"ast":null,"code":"var _jsxFileName = \"/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/components/PostDetails/CommentSection.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { commentPost } from \"../../actions/postsActions\";\nimport useStyles from \"./postDetailsStyles\";\nconst CommentSection = _ref => {\n  let {\n    post,\n    comments,\n    setComments,\n    chill,\n    setChill,\n    a\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const commentsRef = useRef();\n  console.log(7, a.comments);\n  const handleComment = async () => {\n    var _user$result;\n    commentsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    const {\n      comments: newComments\n    } = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`, post._id));\n    setComment(\"\");\n    console.log(2, newComments);\n    setChill('Not Chill');\n    setComments(newComments);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Comments\"), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, c.split(\": \")[0]), c.split(\":\")[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    key: chill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Hello, World!\", chill))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    minRows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Comment\"))));\n};\nexport default CommentSection;","map":{"version":3,"names":["React","useState","useRef","useEffect","Typography","TextField","Button","useDispatch","useSelector","commentPost","useStyles","CommentSection","post","comments","setComments","chill","setChill","a","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","classes","commentsRef","console","log","handleComment","current","scrollIntoView","behavior","newComments","result","name","_id","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/components/PostDetails/CommentSection.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { commentPost } from \"../../actions/postsActions\";\nimport useStyles from \"./postDetailsStyles\";\n\nconst CommentSection = ({post, comments, setComments, chill, setChill, a}) => {\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();  \n  const classes = useStyles();\n  const commentsRef = useRef();\n  console.log(7, a.comments);\n\n  const handleComment = async () => {\n    commentsRef.current.scrollIntoView({ behavior: \"smooth\" });\n    const { comments: newComments } = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\n  \n    setComment(\"\");\n    console.log(2, newComments);\n    setChill('Not Chill');\n    setComments(newComments);\n  };\n\n  return (\n    <div>\n      <div className={classes.commentsOuterContainer}>\n        <div className={classes.commentsInnerContainer}>\n          <Typography gutterBottom variant=\"h6\">\n            Comments\n          </Typography>\n          {comments?.map((c, i) => (\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\n              <strong>{c.split(\": \")[0]}</strong>\n              {c.split(\":\")[1]}\n            </Typography>\n          ))}\n          <div ref={commentsRef} />\n          <div>\n          <h1 key={chill}>Hello, World!{chill}</h1>\n          </div>\n        </div>\n        <div style={{ width: \"70%\" }}>\n          <Typography gutterBottom variant=\"h6\">\n            Write a comment\n          </Typography>\n          <TextField fullWidth minRows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n          <br />\n          <Button style={{ marginTop: \"10px\" }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n            Comment\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;AAClE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,SAAS,MAAM,qBAAqB;AAE3C,MAAMC,cAAc,GAAG,QAAuD;EAAA,IAAtD;IAACC,IAAI;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAC,CAAC;EACvE,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EACxD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMwB,QAAQ,GAAGlB,WAAW,EAAE;EAC9B,MAAMmB,OAAO,GAAGhB,SAAS,EAAE;EAC3B,MAAMiB,WAAW,GAAGzB,MAAM,EAAE;EAC5B0B,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEZ,CAAC,CAACJ,QAAQ,CAAC;EAE1B,MAAMiB,aAAa,GAAG,YAAY;IAAA;IAChCH,WAAW,CAACI,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;IAC1D,MAAM;MAAEpB,QAAQ,EAAEqB;IAAY,CAAC,GAAG,MAAMT,QAAQ,CAAChB,WAAW,CAAE,GAAES,IAAI,aAAJA,IAAI,uCAAJA,IAAI,CAAEiB,MAAM,iDAAZ,aAAcC,IAAK,KAAIb,OAAQ,EAAC,EAAEX,IAAI,CAACyB,GAAG,CAAC,CAAC;IAE5Gb,UAAU,CAAC,EAAE,CAAC;IACdI,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEK,WAAW,CAAC;IAC3BlB,QAAQ,CAAC,WAAW,CAAC;IACrBF,WAAW,CAACoB,WAAW,CAAC;EAC1B,CAAC;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAER,OAAO,CAACY,sBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7C;IAAK,SAAS,EAAEZ,OAAO,CAACa,sBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7C,oBAAC,UAAU;IAAC,YAAY;IAAC,OAAO,EAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,UAEtC,CAAa,EACZ1B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE2B,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAClB,oBAAC,UAAU;IAAC,GAAG,EAAEA,CAAE;IAAC,YAAY;IAAC,OAAO,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAASD,CAAC,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAU,EAClCF,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAEnB,CAAC,eACF;IAAK,GAAG,EAAEhB,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAI,GAAG,EAAEZ,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,eAAa,EAACA,KAAK,CAAM,CACnC,CACF,eACN;IAAK,KAAK,EAAE;MAAE6B,KAAK,EAAE;IAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B,oBAAC,UAAU;IAAC,YAAY;IAAC,OAAO,EAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,iBAEtC,CAAa,eACb,oBAAC,SAAS;IAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAAC,OAAO,EAAC,UAAU;IAAC,KAAK,EAAC,SAAS;IAAC,SAAS;IAAC,KAAK,EAAErB,OAAQ;IAAC,QAAQ,EAAGsB,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC7I;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,eACN,oBAAC,MAAM;IAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAC,SAAS;IAAC,QAAQ,EAAE,CAACzB,OAAO,CAAC0B,MAAO;IAAC,KAAK,EAAC,SAAS;IAAC,OAAO,EAAC,WAAW;IAAC,OAAO,EAAEnB,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,SAEvI,CAAS,CACL,CACF,CACF;AAEV,CAAC;AAED,eAAenB,cAAc"},"metadata":{},"sourceType":"module"}