{"ast":null,"code":"import { CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST, FETCH_POST_BY_SEARCH, FETCH_POST_BY_PAGE } from \"../constants/actionTypeConstants\";\nexport const postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_POST_BY_PAGE:\n      return state = {\n        data: action.payload.data,\n        numberOfPages: action.payload.numberOfPages,\n        page: action.payload.page\n      };\n    case FETCH_POST_BY_SEARCH:\n      return action.payload;\n    case CREATE_POST:\n      return [...posts, action.payload];\n    case UPDATE_POST:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case DELETE_POST:\n      return posts.filter(post => post.id !== action.payload.id);\n    case LIKE_POST:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    default:\n      return posts;\n  }\n};","map":{"version":3,"names":["CREATE_POST","UPDATE_POST","DELETE_POST","LIKE_POST","FETCH_POST_BY_SEARCH","FETCH_POST_BY_PAGE","postReducer","state","action","type","data","payload","numberOfPages","page","posts","map","post","_id","filter","id"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/reducers/postReducer.js"],"sourcesContent":["import { CREATE_POST,UPDATE_POST,DELETE_POST, LIKE_POST, FETCH_POST_BY_SEARCH, FETCH_POST_BY_PAGE  } from \"../constants/actionTypeConstants\";\n\nexport const postReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_POST_BY_PAGE:\n            return state = {data:action.payload.data, numberOfPages:action.payload.numberOfPages, page:action.payload.page};\n        case FETCH_POST_BY_SEARCH:\n            return action.payload;\n        case CREATE_POST:\n            return [...posts, action.payload]\n        case UPDATE_POST:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)\n        case DELETE_POST:\n            return posts.filter(post => post.id !== action.payload.id)\n        case LIKE_POST:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)\n        default:\n            return posts;\n    }\n}"],"mappings":"AAAA,SAASA,WAAW,EAACC,WAAW,EAACC,WAAW,EAAEC,SAAS,EAAEC,oBAAoB,EAAEC,kBAAkB,QAAS,kCAAkC;AAE5I,OAAO,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,kBAAkB;MACnB,OAAOE,KAAK,GAAG;QAACG,IAAI,EAACF,MAAM,CAACG,OAAO,CAACD,IAAI;QAAEE,aAAa,EAACJ,MAAM,CAACG,OAAO,CAACC,aAAa;QAAEC,IAAI,EAACL,MAAM,CAACG,OAAO,CAACE;MAAI,CAAC;IACnH,KAAKT,oBAAoB;MACrB,OAAOI,MAAM,CAACG,OAAO;IACzB,KAAKX,WAAW;MACZ,OAAO,CAAC,GAAGc,KAAK,EAAEN,MAAM,CAACG,OAAO,CAAC;IACrC,KAAKV,WAAW;MACZ,OAAOa,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CAACM,GAAG,GAAGT,MAAM,CAACG,OAAO,GAAGK,IAAI,CAAC;IACvF,KAAKd,WAAW;MACZ,OAAOY,KAAK,CAACI,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKX,MAAM,CAACG,OAAO,CAACQ,EAAE,CAAC;IAC9D,KAAKhB,SAAS;MACV,OAAOW,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CAACM,GAAG,GAAGT,MAAM,CAACG,OAAO,GAAGK,IAAI,CAAC;IACvF;MACI,OAAOF,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module"}