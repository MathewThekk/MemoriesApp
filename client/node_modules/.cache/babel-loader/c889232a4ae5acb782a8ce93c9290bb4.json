{"ast":null,"code":"import * as api from '../api/api.js';\nimport { CREATE_POST, FETCH_POSTS_BY_PAGE, FETCH_POSTS_BY_SEARCH, UPDATE_POST, DELETE_POST, LIKE_POST } from \"../constants/actionTypeConstants\";\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPost()\n//         const action = { type: FETCH_ALL, payload: data }\n//         dispatch(action)\n\n//     } catch (error) {\n//         console.log(error)\n\n//     }\n// }\nexport const getPostsByPage = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPostsByPage(page);\n    console.log(data);\n    const action = {\n      type: FETCH_POSTS_BY_PAGE,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    const action = {\n      type: FETCH_POSTS_BY_SEARCH,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = postData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(postData);\n    const action = {\n      type: CREATE_POST,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = postData => async dispatch => {\n  try {\n    console.log('updating post');\n    const {\n      data\n    } = await api.updatePost(postData);\n    const action = {\n      type: UPDATE_POST,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    const action = {\n      type: DELETE_POST,\n      payload: id\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    const action = {\n      type: LIKE_POST,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","CREATE_POST","FETCH_POSTS_BY_PAGE","FETCH_POSTS_BY_SEARCH","UPDATE_POST","DELETE_POST","LIKE_POST","getPostsByPage","page","dispatch","data","fetchPostsByPage","console","log","action","type","payload","error","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","postData","updatePost","deletePost","id","likePost"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/actions/postsActions.js"],"sourcesContent":["import * as api from '../api/api.js'\nimport { CREATE_POST, FETCH_POSTS_BY_PAGE,FETCH_POSTS_BY_SEARCH, UPDATE_POST,DELETE_POST, LIKE_POST  } from \"../constants/actionTypeConstants\";\n\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPost()\n//         const action = { type: FETCH_ALL, payload: data }\n//         dispatch(action)\n\n//     } catch (error) {\n//         console.log(error)\n\n\n//     }\n// }\nexport const getPostsByPage = (page) => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPostsByPage(page)\n        console.log(data)\n        const action = { type: FETCH_POSTS_BY_PAGE, payload: data }\n        dispatch(action)\n\n    } catch (error) {\n        console.log(error)\n\n\n    }\n}\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n\n       const {data : {data}} = await api.fetchPostsBySearch(searchQuery)\n\n        const action = { type: FETCH_POSTS_BY_SEARCH, payload: data }\n        dispatch(action)\n    }\n    catch (error) {\n        console.log(error)\n    }\n}\nexport const createPost = (postData) => async (dispatch) => {\n    try {\n\n        const { data } = await api.createPost(postData)\n\n\n        const action = { type: CREATE_POST, payload: data }\n        dispatch(action)\n\n    } catch (error) {\n        console.log(error)\n\n    }\n}\nexport const updatePost = (postData) => async (dispatch) => {\n    try {\n        console.log('updating post')\n        const { data } = await api.updatePost(postData)\n\n        const action = { type: UPDATE_POST, payload: data }\n        dispatch(action)\n\n    } catch (error) {\n        console.log(error)\n\n    }\n}\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        const action = { type: DELETE_POST, payload: id }\n        dispatch(action)\n    }\n    catch (error) {\n        console.log(error)\n    }\n}\nexport const likePost = (id) => async (dispatch) => {\n    try {\n\n       const {data} = await api.likePost(id)\n\n\n        const action = { type: LIKE_POST, payload: data }\n        dispatch(action)\n    }\n    catch (error) {\n        console.log(error)\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,eAAe;AACpC,SAASC,WAAW,EAAEC,mBAAmB,EAACC,qBAAqB,EAAEC,WAAW,EAACC,WAAW,EAAEC,SAAS,QAAS,kCAAkC;;AAG9I;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA,OAAO,MAAMC,cAAc,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACW,gBAAgB,CAACH,IAAI,CAAC;IACjDI,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,MAAMI,MAAM,GAAG;MAAEC,IAAI,EAAEb,mBAAmB;MAAEc,OAAO,EAAEN;IAAK,CAAC;IAC3DD,QAAQ,CAACK,MAAM,CAAC;EAEpB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EAGtB;AACJ,CAAC;AACD,OAAO,MAAMC,gBAAgB,GAAIC,WAAW,IAAK,MAAOV,QAAQ,IAAK;EACjE,IAAI;IAED,MAAM;MAACC,IAAI,EAAG;QAACA;MAAI;IAAC,CAAC,GAAG,MAAMV,GAAG,CAACoB,kBAAkB,CAACD,WAAW,CAAC;IAEhE,MAAML,MAAM,GAAG;MAAEC,IAAI,EAAEZ,qBAAqB;MAAEa,OAAO,EAAEN;IAAK,CAAC;IAC7DD,QAAQ,CAACK,MAAM,CAAC;EACpB,CAAC,CACD,OAAOG,KAAK,EAAE;IACVL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMI,UAAU,GAAIC,QAAQ,IAAK,MAAOb,QAAQ,IAAK;EACxD,IAAI;IAEA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACqB,UAAU,CAACC,QAAQ,CAAC;IAG/C,MAAMR,MAAM,GAAG;MAAEC,IAAI,EAAEd,WAAW;MAAEe,OAAO,EAAEN;IAAK,CAAC;IACnDD,QAAQ,CAACK,MAAM,CAAC;EAEpB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EAEtB;AACJ,CAAC;AACD,OAAO,MAAMM,UAAU,GAAID,QAAQ,IAAK,MAAOb,QAAQ,IAAK;EACxD,IAAI;IACAG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,MAAM;MAAEH;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACuB,UAAU,CAACD,QAAQ,CAAC;IAE/C,MAAMR,MAAM,GAAG;MAAEC,IAAI,EAAEX,WAAW;MAAEY,OAAO,EAAEN;IAAK,CAAC;IACnDD,QAAQ,CAACK,MAAM,CAAC;EAEpB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EAEtB;AACJ,CAAC;AACD,OAAO,MAAMO,UAAU,GAAIC,EAAE,IAAK,MAAOhB,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMT,GAAG,CAACwB,UAAU,CAACC,EAAE,CAAC;IACxB,MAAMX,MAAM,GAAG;MAAEC,IAAI,EAAEV,WAAW;MAAEW,OAAO,EAAES;IAAG,CAAC;IACjDhB,QAAQ,CAACK,MAAM,CAAC;EACpB,CAAC,CACD,OAAOG,KAAK,EAAE;IACVL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMS,QAAQ,GAAID,EAAE,IAAK,MAAOhB,QAAQ,IAAK;EAChD,IAAI;IAED,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMV,GAAG,CAAC0B,QAAQ,CAACD,EAAE,CAAC;IAGpC,MAAMX,MAAM,GAAG;MAAEC,IAAI,EAAET,SAAS;MAAEU,OAAO,EAAEN;IAAK,CAAC;IACjDD,QAAQ,CAACK,MAAM,CAAC;EACpB,CAAC,CACD,OAAOG,KAAK,EAAE;IACVL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}