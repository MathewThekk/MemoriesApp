{"ast":null,"code":"import * as api from \"../api/api.js\";\nimport { CREATE_POST, FETCH_POST, FETCH_POSTS_BY_PAGE, FETCH_POSTS_BY_SEARCH, UPDATE_POST, DELETE_POST, LIKE_POST, START_LOADING, FINISHED_LOADING } from \"../constants/actionTypeConstants\";\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPost()\n//         const action = { type: FETCH_ALL, payload: data }\n//         dispatch(action)\n\n//     } catch (error) {\n//         console.log(error)\n\n//     }\n// }\n\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const res = await api.fetchPost(id);\n    console.log(res);\n    const action = {\n      type: FETCH_POST,\n      payload: res\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsByPage = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPostsByPage(page);\n    const action = {\n      type: FETCH_POSTS_BY_PAGE,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    console.log('action');\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    const action = {\n      type: FETCH_POSTS_BY_SEARCH,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = postData => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(postData);\n    const action = {\n      type: CREATE_POST,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = postData => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.updatePost(postData);\n    const action = {\n      type: UPDATE_POST,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    await api.deletePost(id);\n    const action = {\n      type: DELETE_POST,\n      payload: id\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.likePost(id);\n    const action = {\n      type: LIKE_POST,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: FINISHED_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","CREATE_POST","FETCH_POST","FETCH_POSTS_BY_PAGE","FETCH_POSTS_BY_SEARCH","UPDATE_POST","DELETE_POST","LIKE_POST","START_LOADING","FINISHED_LOADING","getPost","id","dispatch","type","res","fetchPost","console","log","action","payload","error","getPostsByPage","page","data","fetchPostsByPage","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","postData","updatePost","deletePost","likePost"],"sources":["/Users/mathew.thekkadayil/Documents/Dev/Memories/client/src/actions/postsActions.js"],"sourcesContent":["import * as api from \"../api/api.js\";\nimport { CREATE_POST, FETCH_POST, FETCH_POSTS_BY_PAGE, FETCH_POSTS_BY_SEARCH, UPDATE_POST, DELETE_POST, LIKE_POST, START_LOADING, FINISHED_LOADING } from \"../constants/actionTypeConstants\";\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPost()\n//         const action = { type: FETCH_ALL, payload: data }\n//         dispatch(action)\n\n//     } catch (error) {\n//         console.log(error)\n\n//     }\n// }\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const res = await api.fetchPost(id);\n    console.log(res);\n\n    const action = { type: FETCH_POST, payload: res };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsByPage = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPostsByPage(page);\n    const action = { type: FETCH_POSTS_BY_PAGE, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    console.log('action')\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n\n    const action = { type: FETCH_POSTS_BY_SEARCH, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (postData) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(postData);\n\n    const action = { type: CREATE_POST, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (postData) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.updatePost(postData);\n\n    const action = { type: UPDATE_POST, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.deletePost(id);\n    const action = { type: DELETE_POST, payload: id };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.likePost(id);\n\n    const action = { type: LIKE_POST, payload: data };\n    dispatch(action);\n    dispatch({ type: FINISHED_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}